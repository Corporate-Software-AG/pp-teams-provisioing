name: release-solution
# convert solution to managed (using a build PowerPlatform environment for the conversion)
# upload the solution to the GitHub artifacts and deploy to the PROD environment
on:
  workflow_dispatch:
    inputs: 
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
      solution_name:
        description: 'The solution name.'
        type: string
        required: true
        default: TeamsProvisioning
      build_environment_url:
        description: 'build environment url.'
        type: string
        required: true
        default: https://orgb272e53f.crm4.dynamics.com/      
      release_environment_url: 
        description: 'release environment url.'
        type: string
        required: true
        default: https://corporatesoftware.crm4.dynamics.com/      

env:
  SOLUTION_SHIPPING_FOLDER: out/ship/
  SOLUTION_OUTBOUND_FOLDER: out/solutions/
  SOLUTION_SOURCE_FOLDER: solutions/
  SOLUTION_RELEASE_FOLDER: out/release
  CLIENT_ID: '4ab9cbd9-1441-48f7-8d2a-5c6d85c96eea'
  TENANT_ID: '2bbd7e41-02c9-4b4e-8168-339f900c4319'

jobs:
  convert-to-managed:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v0
      with:
        solution-folder: ${{ env.SOLUTION_SOURCE_FOLDER }}/${{ inputs.solution_name }}
        solution-file: ${{ env.SOLUTION_OUTBOUND_FOLDER }}/${{ inputs.solution_name }}.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{inputs.build_environment_url }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.APP_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-file: ${{ env.SOLUTION_OUTBOUND_FOLDER }}/${{ inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{ inputs.build_environment_url }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.APP_SECRET }} 
        tenant-id: ${{ env.TENANT_ID }}
        solution-name: ${{ inputs.solution_name }}
        managed: true
        solution-output-file: ${{ env.SOLUTION_SHIPPING_FOLDER }}/${{ inputs.solution_name }}.zip

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.SOLUTION_SHIPPING_FOLDER}}/

  release-managed:
    needs: [ convert-to-managed ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.SOLUTION_RELEASE_FOLDER }}

    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{ inputs.release_environment_url }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ secrets.APP_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-file: ${{ env.SOLUTION_RELEASE_FOLDER }}/${{ inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true